{"version":3,"sources":["node_modules/browser-pack/_prelude.js","scripts/main.js","scripts/col_collapse.js","scripts/spinner.js","scripts/progress_report.js"],"names":["spinner","require","col_collapse","progress_report","$","document","ready","jQuery","module","exports","expand_icon","find","append","click","target","this","data","toggleClass","cc_targets","length","removeClass","addClass","fn","action","text","save_progress","progress_form","serialize","show","range_input","prop","console","log","hide","progress_panel","progress","progress_bar","on","event","val","css","preventDefault","focus","blur"],"mappings":"AAAA;AEWAQ,OAAOC,QAAU,WACb,GAAIC,GAAYN,EAAE,4FACdF,EAAeE,EAAE,mBAErBF,GAAaS,KAAK,yBAAyBC,OAAOF,GAElDR,EAAaS,KAAK,eAAeE,MAAM,WACnC,GAAIC,GAASV,EAAEW,MAAMC,KAAK,SACX,SAAXF,EACAZ,EAAaS,KAAK,cAAcM,YAAY,gBAG5Cf,EAAaS,KAAK,cAAgBG,GAAQG,YAAY,kBAG9Df,EAAaS,KAAK,6BAA6BE,MAAM,WACjD,GAAIK,GAAahB,EAAaS,KAAK,0BAC/BT,GAAaS,KAAK,iBAAiBQ,OAAS,EAC5CD,EAAWE,YAAY,gBAEvBF,EAAWG,SAAS;;ADvBhCrB,QAAUC,QAAQ,aAClBC,aAAeD,QAAQ,qBACvBE,gBAAkBF,QAAQ,wBAE1BG,EAAEC,UAAUC,MAAM,WACdN,QAASO,QACTL,eACAC;;AGNJK,OAAOC,QAAU,WA6Bb,QAASgB,KAGWC,EAAcC,WAE9B3B,GAAQ4B,OACRC,EAAYC,KAAK,YAAY,GAE7BC,QAAQC,IAAI,kBACZhC,EAAQiC,OACRJ,EAAYC,KAAK,YAAY,GAtCjC,GAAII,GAAiB9B,EAAE,oBACnB+B,EAAWD,EAAevB,KAAK,aAC/ByB,EAAeD,EAASxB,KAAK,iBAC7Be,EAAgBQ,EAAevB,KAAK,kBACpCX,EAAUI,IAAIJ,SAClB0B,GAAcd,OAAOZ,GAASiC,MAG9B,IAAIJ,GAAcH,EAAcf,KAAK,kBACrCkB,GAAYQ,GAAG,QAAS,SAASC,GAC7BF,EAAaZ,KAAKK,EAAYU,MAAQ,cACtCH,EAAaI,IAAK,QAASX,EAAYU,MAAM,OAGjDJ,EAASE,GAAG,QAAS,SAAUC,GAC3BA,EAAMG,iBACNf,EAAcE,OACdC,EAAYa,QACZb,EAAYc,KAAK,SAAUL,GACxBZ,EAAcO,WAGrBP,EAAcW,GAAG,SAAU,SAAUC,GACjCA,EAAMG,iBACNhB,IACAC,EAAcO;;AD5BtBzB,OAAOC,QAAU,SAAWL,GAExBA,EAAEkB,GAAGtB,QAAU,SAAUuB,EAAQC,GAC7BA,EAAOA,GAAQ,SACf,IAAIxB,GAAUI,EAAE,8CAA8CoB,EAAK,UACnE,OAAY,UAARD,EAIOvB,GAHPe,KAAKH,OAAOZ,GAKTe,OAGXX,EAAE,mBAAmBJ,QAAQ","file":"bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","/**\n * Bootstrap Extras (v0.1): main.js\n *   -- Collate all component scripts via Broswerify https://www.npmjs.com/package/browserify\n *\n *   Dependencies:  Bootstrap + JQuery + spinner\n *   MIT Open-source License (https://github.com/powderflask/bootstrap_extras/blob/master/LICENSE)\n */\n\nspinner = require('./spinner');\ncol_collapse = require('./col_collapse.js');\nprogress_report = require('./progress_report.js');\n\n$(document).ready(function() {\n    spinner( jQuery );\n    col_collapse();\n    progress_report();\n});\n","/**\n * Table Column Collapse (v0.1): col_collapse.js\n *   -- Collapse / Expand table columns by clicking on a cc-control.\n *   -- Demo: https://jsfiddle.net/powderflask/gd7ct85q/\n *   Use data-controls attribute on control to specify class of cc-target elements to collapse.\n *   Use data-controls='all' to control all cc-target elements\n *\n *   Dependencies:  Bootstrap + JQuery\n *   MIT Open-source License (https://github.com/powderflask/bootstrap_extras/blob/master/LICENSE)\n */\n\nmodule.exports = function() {\n    var expand_icon=$('<span class=\"glyphicon glyphicon-resize-full cc-rotate-45 cc-offset\" aria-hidden=\"true\">');\n    var col_collapse = $('.cc-col-collapse');\n\n    col_collapse.find('.cc-control.cc-target').append(expand_icon);\n\n    col_collapse.find('.cc-control').click(function () {\n        var target = $(this).data('target');\n        if (target === 'all') {\n            col_collapse.find('.cc-target').toggleClass('cc-collapsed');\n        }\n        else {\n            col_collapse.find('.cc-target.' + target).toggleClass('cc-collapsed');\n        }\n    });\n    col_collapse.find('.cc-control.cc-expand-all').click(function () {\n        var cc_targets = col_collapse.find('.cc-target, .cc-control');\n        if (col_collapse.find('.cc-collapsed').length > 0)\n            cc_targets.removeClass('cc-collapsed');\n        else {\n            cc_targets.addClass('cc-collapsed');\n        }\n    });\n};\n","/**\n * AJAX Loading Spinner (v0.1): spinner.js\n *   -- a JQuery plugin spinner to signal asyn request in-progress\n *\n *   Dependencies:  Bootstrap + JQuery\n *   MIT Open-source License (https://github.com/powderflask/bootstrap_extras/blob/master/LICENSE)\n */\nmodule.exports = function ( $ ) {\n\n    $.fn.spinner = function( action, text ) {\n        text = text || 'Savingâ€¦';\n        var spinner = $('<span class=\"spinner\" style=\"display:none\">'+text+'</span>');\n        if (action=='append') {\n            this.append(spinner);\n        }\n        else {\n            return spinner;\n        }\n        return this;\n    };\n\n    $('.spinner-append').spinner('append');\n\n};\n\n","/**\n * Progress Report Component (v0.1): progress_report.js\n *   -- a Bootstrap Progress Bar with an interactive range input\n *   -- AJAX save selected value using standard HMTL form.\n *\n *   Dependencies:  Bootstrap + JQuery + spinner\n *   MIT Open-source License (https://github.com/powderflask/bootstrap_extras/blob/master/LICENSE)\n */\n\nmodule.exports = function() {\n    var progress_panel = $('.progress-report');\n    var progress = progress_panel.find('.progress');\n    var progress_bar = progress.find('.progress-bar');\n    var progress_form = progress_panel.find('.progress-form');\n    var spinner = $().spinner();\n    progress_form.append(spinner).hide( );\n    // var spinner = progress_form.find('.spinner');\n\n    var range_input = progress_form.find('.progress-input');\n    range_input.on('input', function(event) {\n        progress_bar.text(range_input.val() + \"% Complete\");\n        progress_bar.css( \"width\", range_input.val()+\"%\");\n    });\n\n    progress.on('click', function (event) {\n        event.preventDefault();\n        progress_form.show();\n        range_input.focus();\n        range_input.blur(function (event) {\n           progress_form.hide();\n        });\n    });\n    progress_form.on('change', function (event) {\n        event.preventDefault();\n        save_progress();\n        progress_form.hide();\n    });\n\n    function save_progress() {\n        // console.log(\"save_progress is working!\"); // sanity check\n\n        var form_data = progress_form.serialize();\n        //console.log(form_data);\n        spinner.show();\n        range_input.prop('disabled', true);\n\n        console.log(\"Ajax Call here\");\n        spinner.hide();\n        range_input.prop('disabled', false);\n\n/*\n        $.ajax({\n            url : progress_form.attr('action'),\n            type : \"POST\", // http method\n            data : form_data, // data sent with the post request\n\n            // handle a successful response\n            success : function(json) {\n                // console.log(\"JSON RESPONSE:\", json); // Sanity check\n                spinner.hide();\n                range_input.prop('disabled', false);\n\n                if (json.message) {\n                    progress_form.before(json.message);\n                }\n            },\n\n            // handle a non-successful response\n            error : function(xhr,errmsg,err) {\n                // Undo loading UI...\n                spinner.hide();\n                range_input.prop('disabled', false);\n                progress_form.show();\n                // Add an error messge.\n                progress_form.after('<div class=\"alert alert-warning alert-dismissible\" role=\"alert\">' +\n                                    '<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">' +\n                                        '<span aria-hidden=\"true\">&times;</span>' +\n                                    '</button>' +\n                                    'Oops! We encountered an error processing your request: '+ errmsg +\n                                    '<br>Refresh page and try again?' +\n                                '</div>'); // add the error to the dom\n                console.log(xhr.status + \": \" + xhr.responseText); // provide a bit more info about the error to the console\n            }\n        });\n        */\n    }\n};\n"]}